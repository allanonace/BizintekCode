Formato XML familias MTU
----
<?xml version="1.0" encoding="utf-8"?>
<Registers>
  <Overload>
    <Id>_string_</Id>
    <Description>_string_</Description>
    <Registers>
      <Register>_id_register_param_1_</Register>
      <Register>_id_register_param_2_</Register>
    </Registers>
    <Operation>_val1_valn_operacion_</Operation>
    <Method>_id_method_to_use_</Method>
  </Overload>
  <Register>
    <Id>_string_</Id>
    <Description>_string_</Description>
    <Type>int|uint|ulong|bool|char|string</Type>
    <Address>_integer_</Address>
    <Size>_integer_</Size>
    <Write>false|_vacio_</Write>
    <Custom>_val_1_operacion_|_val_1_mascara_string_|method|_vacio_</Custom>
  </Register>
</Registers>

Register
----
- Address: Posición en memoria ( byte inicial ) del registro
- Size   : Cantidad de bytes consecutivos que ocupa el registro
           pej. Address 3 y Size 4 = Bytes { 3, 4, 5, 6 }
- Write  : Por defecto los registros seran de solo lectura ( <Write>false</Write> )
           Para indicar que un campo es de lectura/escritura indicar <Write>true</Write>
- Custom : Permite procesar el valor del registro que no recuperarlo/leerlo ( get ) directamente
           - Para registros de tipo numerico se puede indicar una operacion
		     pej. _val_ + 2 / 3
           - Para registros de tipo cadena se puede indicar la mascara con la que formatear su valor
		     pej. Version {0:00}
		   - También se puede querer usar una función definida en MemoryMapXXX.cs con el mismo nombre del registro mas el
		     sufijo "_Logic", siendo útil en casos complejos en los que las dos opciones anteriores no sean una opción
			 Para utilizar esta última funcionalidad habra que indicar <Custom>method</Custom> ( no es case sensitive )
             pej. Registro 'MtuType' -> Método 'MtuType_Logic'
